package com.lavi.tablearrangments.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EventTableAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEventTableAllPropertiesEquals(EventTable expected, EventTable actual) {
        assertEventTableAutoGeneratedPropertiesEquals(expected, actual);
        assertEventTableAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEventTableAllUpdatablePropertiesEquals(EventTable expected, EventTable actual) {
        assertEventTableUpdatableFieldsEquals(expected, actual);
        assertEventTableUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEventTableAutoGeneratedPropertiesEquals(EventTable expected, EventTable actual) {
        assertThat(actual)
            .as("Verify EventTable auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEventTableUpdatableFieldsEquals(EventTable expected, EventTable actual) {
        assertThat(actual)
            .as("Verify EventTable relevant properties")
            .satisfies(a -> assertThat(a.getTableNumber()).as("check tableNumber").isEqualTo(expected.getTableNumber()))
            .satisfies(a -> assertThat(a.getMaxSeats()).as("check maxSeats").isEqualTo(expected.getMaxSeats()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEventTableUpdatableRelationshipsEquals(EventTable expected, EventTable actual) {
        assertThat(actual)
            .as("Verify EventTable relationships")
            .satisfies(a -> assertThat(a.getVenue()).as("check venue").isEqualTo(expected.getVenue()));
    }
}
